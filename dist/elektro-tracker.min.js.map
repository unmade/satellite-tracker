{"version":3,"sources":["module.js","earth.js","main.js","sun.js"],"names":["TRACKER","namespace","ns","i","parts","split","parent","slice","length","earth","atmosphere","Kr","Km","ESun","g","innerRadius","outerRadius","wavelength","scaleDepth","mieScaleDepth","textureLoader","THREE","TextureLoader","diffuse","load","diffuseNight","diffuseSpecular","uniforms","v3LightPosition","type","value","Vector3","normalize","v3InvWavelength","Math","pow","fCameraHeight","fCameraHeight2","fInnerRadius","fInnerRadius2","fOuterRadius","fOuterRadius2","fKrESun","fKmESun","fKr4PI","PI","fKm4PI","fScale","fScaleDepth","fScaleOverScaleDepth","g2","nSamples","fSamples","tDiffuse","tDiffuseNight","tDiffuseSpecular","tDisplacement","tSkyboxDiffuse","fNightScale","fSpecularScale","fSpecularSize","ground","geometry","SphereGeometry","material","ShaderMaterial","vertexShader","$","text","fragmentShader","mesh","Mesh","sky","side","BackSide","transparent","document","ready","render","controls","update","requestAnimationFrame","cameraHeight","camera","position","renderer","scene","onWindowResize","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","setSize","webglEl","getElementById","width","height","sun","Scene","add","lensFlare","PerspectiveCamera","set","up","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","setClearColor","appendChild","domElement","TrackballControls","addEventListener","addLight","h","s","l","x","y","z","light","PointLight","color","setHSL","flareColor","Color","LensFlare","textureFlare0","AdditiveBlending","textureFlare2","textureFlare3","customUpdateCallback","lensFlareUpdateCallback","object","f","flare","fl","lensFlares","vecX","positionScreen","vecY","distance","rotation","degToRad"],"mappings":"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","file":"elektro-tracker.min.js","sourcesContent":["'use strict';\n\n\nvar TRACKER = TRACKER || {};\n\nTRACKER.namespace = function(ns) {\n    var parts = ns.split('.'),\n        parent = TRACKER,\n        i;\n    if (parts[0] === \"TRACKER\") {\n        parts = parts.slice(1);\n    }\n    for (i = 0; i < parts.length; i += 1) {\n       if (typeof parent[parts[i]] === \"undefined\") {\n           parent[parts[i]] = {};\n       }\n       parent = parent[parts[i]];\n   }\n   return parent;\n};\n","'use strict';\n\n\nTRACKER.namespace('earth');\n\nTRACKER.earth = (function() {\n    var atmosphere = {\n        Kr: 0.0025,\n        Km: 0.0010,\n        ESun: 20.0,\n        g: -0.950,\n        innerRadius: 100.0,\n        outerRadius: 101.5,\n        wavelength: [0.550, 0.50, 0.475],\n        scaleDepth: 0.25,\n        mieScaleDepth: 0.1\n    };\n    var textureLoader = new THREE.TextureLoader(),\n        diffuse = textureLoader.load('/src/images/earth/diffuse-low.jpg'),\n        diffuseNight = textureLoader.load('/src/images/earth/diffuse-night-low.jpg'),\n        diffuseSpecular = textureLoader.load('/src/images/earth/diffuse-specular-low.png');\n\n    var uniforms = {\n        v3LightPosition: {\n            type: \"v3\",\n            value: new THREE.Vector3(1e8, 0, 1e8).normalize()\n        },\n        v3InvWavelength: {\n            type: \"v3\",\n            value: new THREE.Vector3(1 / Math.pow(atmosphere.wavelength[0], 4),\n                                     1 / Math.pow(atmosphere.wavelength[1], 4),\n                                     1 / Math.pow(atmosphere.wavelength[2], 4))\n        },\n        fCameraHeight: {\n            type: \"f\",\n            value: 0\n        },\n        fCameraHeight2: {\n            type: \"f\",\n            value: 0\n        },\n        fInnerRadius: {\n            type: \"f\",\n            value: atmosphere.innerRadius\n        },\n        fInnerRadius2: {\n            type: \"f\",\n            value: atmosphere.innerRadius * atmosphere.innerRadius\n        },\n        fOuterRadius: {\n            type: \"f\",\n            value: atmosphere.outerRadius\n        },\n        fOuterRadius2: {\n            type: \"f\",\n            value: atmosphere.outerRadius * atmosphere.outerRadius\n        },\n        fKrESun: {\n            type: \"f\",\n            value: atmosphere.Kr * atmosphere.ESun\n        },\n        fKmESun: {\n            type: \"f\",\n            value: atmosphere.Km * atmosphere.ESun\n        },\n        fKr4PI: {\n            type: \"f\",\n            value: atmosphere.Kr * 4.0 * Math.PI\n        },\n        fKm4PI: {\n            type: \"f\",\n            value: atmosphere.Km * 4.0 * Math.PI\n        },\n        fScale: {\n            type: \"f\",\n            value: 1 / (atmosphere.outerRadius - atmosphere.innerRadius)\n        },\n        fScaleDepth: {\n            type: \"f\",\n            value: atmosphere.scaleDepth\n        },\n        fScaleOverScaleDepth: {\n            type: \"f\",\n            value: 1 / (atmosphere.outerRadius - atmosphere.innerRadius) / atmosphere.scaleDepth\n        },\n        g: {\n            type: \"f\",\n            value: atmosphere.g\n        },\n        g2: {\n            type: \"f\",\n            value: atmosphere.g * atmosphere.g\n        },\n        nSamples: {\n            type: \"i\",\n            value: 3\n        },\n        fSamples: {\n            type: \"f\",\n            value: 3.0\n        },\n        tDiffuse: {\n            type: \"t\",\n            value: diffuse\n        },\n        tDiffuseNight: {\n            type: \"t\",\n            value: diffuseNight\n        },\n        tDiffuseSpecular: {\n                type: \"t\",\n                value: diffuseSpecular\n        },\n        tDisplacement: {\n            type: \"t\",\n            value: 0\n        },\n        tSkyboxDiffuse: {\n            type: \"t\",\n            value: 0\n        },\n        fNightScale: {\n            type: \"f\",\n            value: 1\n        },\n        fSpecularScale: {\n            type: \"f\",\n            value: 1\n        },\n        fSpecularSize: {\n            type: \"f\",\n            value: 25\n        }\n    };\n\n\n    var ground = {\n        geometry: new THREE.SphereGeometry(atmosphere.innerRadius, 50, 50),\n        material: new THREE.ShaderMaterial({\n            uniforms: uniforms,\n            vertexShader: $(\"#vertexGround\").text(),\n            fragmentShader: $(\"#fragmentGround\").text()\n        })\n    };\n    ground.mesh = new THREE.Mesh(ground.geometry, ground.material);\n\n\n    var sky = {\n        geometry: new THREE.SphereGeometry(atmosphere.outerRadius, 500, 500),\n        material: new THREE.ShaderMaterial({\n            uniforms: uniforms,\n            vertexShader: $(\"#vertexSky\").text(),\n            fragmentShader: $(\"#fragmentSky\").text()\n        })\n    };\n    sky.mesh = new THREE.Mesh(sky.geometry, sky.material);\n\n    sky.material.side = THREE.BackSide;\n    sky.material.transparent = true;\n\n    return {\n        ground: ground,\n        sky: sky\n    }\n\n})();\n","'use strict';\n\n$(document).ready(function() {\n\tvar webglEl = document.getElementById('scene');\n\n\tvar width  = window.innerWidth,\n\t\theight = window.innerHeight;\n\n    var earth = TRACKER.earth,\n\t\tsun = TRACKER.sun;\n\n\tvar scene = new THREE.Scene();\n    scene.add(earth.ground.mesh);\n    scene.add(earth.sky.mesh);\n\tscene.add(sun.lensFlare);\n\n\n\tvar camera = new THREE.PerspectiveCamera(70, width / height, 1, 15000);\n\tcamera.position.set(5600, 5300, 500);\n\tcamera.up = new THREE.Vector3( 0, 0, 1 );\n\n\tvar renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true});\n\trenderer.setPixelRatio(window.devicePixelRatio || 1);\n\trenderer.setSize(width, height);\n    renderer.setClearColor(0x000000, 1);\n    webglEl.appendChild(renderer.domElement);\n\n\n    var controls = new THREE.TrackballControls(camera);\n\n\tvar debugaxis = axes;\n\t// debugaxis(200);\n\trender();\n\n\tvar f = 0,\n\t\tg = 0;\n\n\tfunction render() {\n\t\tcontrols.update();\n        requestAnimationFrame(render);\n\n        var cameraHeight = camera.position.length();\n        earth.sky.material.uniforms.fCameraHeight.value = cameraHeight;\n        earth.sky.material.uniforms.fCameraHeight2.value = cameraHeight * cameraHeight;\n        earth.ground.material.uniforms.fCameraHeight.value = cameraHeight;\n        earth.ground.material.uniforms.fCameraHeight2.value = cameraHeight * cameraHeight;\n        return renderer.render(scene, camera);\n\t}\n\n\tfunction axes(axisLength){\n\t\tfunction v(x,y,z){\n\t\t\treturn new THREE.Vector3(x,y,z);\n\t\t}\n\n\t\t// Create axis (point1, point2, colour)\n\t\t// {x: red, y: green, z: blue}\n\t\tfunction createAxis(p1, p2, color){\n\t\t\tvar line, lineGeometry = new THREE.Geometry(),\n\t\t\tlineMat = new THREE.LineBasicMaterial({color: color});\n\t\t\tlineGeometry.vertices.push(p1, p2);\n\t\t\tline = new THREE.Line(lineGeometry, lineMat);\n\t\t\tscene.add(line);\n\t\t}\n\n\t\tcreateAxis(v(-axisLength, 0, 0), v(axisLength, 0, 0), 0xFF0000);\n\t\tcreateAxis(v(0, -axisLength, 0), v(0, axisLength, 0), 0x00FF00);\n\t\tcreateAxis(v(0, 0, -axisLength), v(0, 0, axisLength), 0x0000FF);\n\t};\n\n    function onWindowResize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n    }\n    window.addEventListener( 'resize', onWindowResize, false );\n});\n","'use strict';\n\n\nTRACKER.namespace('sun');\n\n\nTRACKER.sun = (function() {\n    var textureLoader = new THREE.TextureLoader(),\n        textureFlare0 = textureLoader.load( \"/src/images/lensflare/lensflare0.png\" ),\n        textureFlare2 = textureLoader.load( \"/src/images/lensflare/lensflare2.png\" ),\n        textureFlare3 = textureLoader.load( \"/src/images/lensflare/lensflare3.png\" );\n\n    var lensFlare,\n        light;\n\n    addLight( 0.55, 0.9, 0.5, 5000, 0, 5000 );\n\n\tfunction addLight( h, s, l, x, y, z ) {\n\t\tlight = new THREE.PointLight( 0xffffff, 1.5, 2000 );\n\t\tlight.color.setHSL( h, s, l );\n\t\tlight.position.set( x, y, z );\n        \n\t\tvar flareColor = new THREE.Color( 0xffffff );\n\t\tflareColor.setHSL( h, s, l + 0.5 );\n\t\tlensFlare = new THREE.LensFlare( textureFlare0, 350, 0.0, THREE.AdditiveBlending, flareColor );\n\t\tlensFlare.add( textureFlare2, 512, 0.0, THREE.AdditiveBlending );\n\t\tlensFlare.add( textureFlare3, 60, 0.6, THREE.AdditiveBlending );\n\t\tlensFlare.add( textureFlare3, 70, 0.7, THREE.AdditiveBlending );\n\t\tlensFlare.add( textureFlare3, 120, 0.9, THREE.AdditiveBlending );\n\t\tlensFlare.add( textureFlare3, 70, 1.0, THREE.AdditiveBlending );\n\t\tlensFlare.customUpdateCallback = lensFlareUpdateCallback;\n\t\tlensFlare.position.set( x, y, z );\n\t}\n\n    function lensFlareUpdateCallback( object ) {\n\t\tvar f, fl = object.lensFlares.length;\n\t\tvar flare;\n\t\tvar vecX = -object.positionScreen.x * 2;\n\t\tvar vecY = -object.positionScreen.y * 2;\n\t\tfor( f = 0; f < fl; f++ ) {\n\t\t\tflare = object.lensFlares[ f ];\n\t\t\tflare.x = object.positionScreen.x + vecX * flare.distance;\n\t\t\tflare.y = object.positionScreen.y + vecY * flare.distance;\n\t\t\tflare.rotation = 0;\n\t\t}\n\t\tobject.lensFlares[ 2 ].y += 0.025;\n\t\tobject.lensFlares[ 3 ].rotation = object.positionScreen.x * 0.5 + THREE.Math.degToRad( 45 );\n\t}\n\n    return {\n        light: light,\n        lensFlare: lensFlare\n    }\n\n})();\n"],"sourceRoot":"/source/"}