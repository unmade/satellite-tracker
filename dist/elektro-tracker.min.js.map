{"version":3,"sources":["module.js","utils.constants.js","utils.coordinate-converter.js","utils.date-converter.js","utils.loaders.js","celestial-object.js","celestial-object.uniforms.js","milkyway.js","moon-position.js","player.js","satellite.js","sun.js"],"names":["TRACKER","namespace","ns","i","parts","split","parent","slice","length","utils","Constants","AU","DIFF_EPOCH","GRAD_IN_RAD","JULIAN_C","MJD2000","OMEGA","Math","PI","PI2","SEC_IN_DAY","SEC_IN_RAD","TT_TAI_DIFF","R0","CoordinateConverter","eclipSpherToEquCart","tdb","l","b","r","eps","getEpsMean","THREE","Vector3","cos","sin","tan","eclipticToEquatorial","x","y","z","ts","Const","ts2","ts3","getGMST","date","satellite","gstimeFromDate","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","sphericalToCartesian","DateConverter","utcToMjd","nyear","nmonth","nday","nhours","nminutes","nseconds","a","parseInt","m","jdn","jd","utcToTdb","tt","utcToTT","d","g","mjd","deltaT","getDeltaT","leap_second","Loaders","defferedOBJLoader","obj","name","url","defer","$","Deferred","loader","OBJLoader","load","event","resolve","defferedOBJMTLLoader","objUrl","mtlUrl","mtlLoader","MTLLoader","preload","objLoader","setMaterials","object","promise","defferedTextureLoader","TextureLoader","CelestialObject","userConf","diffuse","diffuseNight","diffuseSpecular","uniforms","this","atmosphere","Kr","Km","ESun","innerRadius","innerSegments","outerRadius","outerSegments","wavelength","scaleDepth","extend","configureUniforms","ground","Mesh","SphereGeometry","ShaderMaterial","vertexShader","text","fragmentShader","sky","side","BackSide","transparent","prototype","val","arguments","fKrESun","calcfKrESun","fKmESun","calcfKmESun","material","value","val2","g2","fKm4PI","calcfKm4PI","fKr4PI","calcfKr4PI","lightPosition","position","v3LightPosition","copy","normalize","rotateY","angle","cosA","sinA","rotation","m3RotY","set","setTextures","textures","tDiffuse","tDiffuseNight","tDiffuseSpecular","overScale","calcfScaleOverScaleDepth","fScaleDepth","fScaleOverScaleDepth","waveBlue","blue","calcvWaveChannel","v3InvWavelength","setZ","waveGreen","green","setY","waveRed","red","setX","pow","type","Matrix3","fCameraHeight","fCameraHeight2","fInnerRadius","fInnerRadius2","fOuterRadius","fOuterRadius2","fScale","fNightScale","fSpecularScale","fSpecularSize","milkyway","MeshBasicMaterial","map","ImageUtils","loadTexture","opacity","MoonPosition","frac","f","CoordConverter","getEclipticPosition","dt","fam","fal","fap","fad","faf","dl","ds","dh","dn","v","dr","getEquatorialPosition","eclPos","equPos","Player","init","conf","config","player","Date","width","document","onDateChangeCallback","toggleCoordinatesCallback","changeCameraViewCallback","updateScale","range","updateDateRange","updateHover","click","togglePlay","rewind","forward","toNow","toggleSpeed","toggleCoordinates","showCameraViewPopup","mousedown","onDateClicked","mousemove","onDateChange","mouseenter","showPrehover","mouseleave","hidePrehover","onDateClickedAndMove","mouseup","dateClicked","hideCameraViewPopup","e","clicked","setUTCMonth","play","container","is","target","has","hide","startDate","scale","pageX","css","left","right","popup","cameraView","offset","outerWidth","toggle","show","toggleClass","coordinateSystem","speed","getFullYear","getMonth","getTime","endDate","Satellite","tle","object3d","satrec","twoline2satrec","line1","line2","setObj","gmst","p","propagate","divideScalar","axis","applyAxisAngle","Sun","lensFlareUpdateCallback","flare","fl","lensFlares","vecX","positionScreen","vecY","distance","degToRad","color","flareColor","Color","setHSL","h","s","light","DirectionalLight","lensFlare","LensFlare","AdditiveBlending","add","customUpdateCallback","sunEclipticPosition","u3","lambda","betta"],"mappings":"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","file":"elektro-tracker.min.js","sourcesContent":["'use strict';\n\n\nvar TRACKER = TRACKER || {};\n\nTRACKER.namespace = function(ns) {\n    var parts = ns.split('.'),\n        parent = TRACKER,\n        i;\n    if (parts[0] === \"TRACKER\") {\n        parts = parts.slice(1);\n    }\n    for (i = 0; i < parts.length; i += 1) {\n       if (typeof parent[parts[i]] === \"undefined\") {\n           parent[parts[i]] = {};\n       }\n       parent = parent[parts[i]];\n   }\n   return parent;\n};\n","TRACKER.namespace('utils.Constants');\n\nTRACKER.utils.Constants = (function() {\n    'use strict';\n\n    // TODO: поправить названия у GRAD_IN_RAD, SEC_IN_RAD\n    return {\n        AU: 149597870.691,\n        DIFF_EPOCH: 2400000.5,\n        GRAD_IN_RAD: 0.017453292519943295088124656649908317,\n        JULIAN_C: 36525.0,\n        MJD2000: 51544.5,\n        OMEGA: 2*Math.PI / 86164.090530833,\n        PI2: 2*Math.PI,\n        SEC_IN_DAY: 86400.0,\n        SEC_IN_RAD: 4.8481368110953597467454098131995829e-06,\n        TT_TAI_DIFF: 32.184,\n        R0: 6378.1363\n    }\n})();\n","/**\n * @file Coverts date between different formats\n * @author Aleksey Maslakov\n */\n\n\nTRACKER.namespace(\"utils.CoordinateConverter\");\n\n/** @namespace utils/utils.coordinate-converter.js */\nTRACKER.utils.CoordinateConverter = (function() {\n    'use strict';\n\n    var Const = TRACKER.utils.Constants;\n\n    return {\n        /** Converts ecliptic (spherical) coordinates to the equatorial (cartesian) ones */\n        eclipSpherToEquCart: eclipSpherToEquCart,\n\n        /** Converts ecliptic (cartesian) coordinates to the equatorial (cartesian) ones */\n        eclipticToEquatorial: eclipticToEquatorial,\n\n        /** Returns angle between absolute and relative celestial coordinate system */\n        getGMST: getGMST,\n\n        /** Return obliquity of the ecliptic in radians */\n        getEpsMean: getEpsMean,\n\n        /** Coverts spherical coordinate to the cartesian  */\n        sphericalToCartesian: sphericalToCartesian\n    }\n\n    /**\n     * Converts ecliptic (spherical) coordinates to the equatorial (cartesian) ones.\n     * @param {Number} tdb - MJD in TDB scale.\n     * @param {Number} l - Longitude in radians.\n     * @param {Number} b - Latitude in radians.\n     * @param {Number} r - Range in km\n     * @returns {THREE.Vector3} Equatorial cartesian coordinates\n     */\n    function eclipSpherToEquCart(tdb, l, b, r) {\n        var eps = getEpsMean(tdb);\n\n        return new THREE.Vector3(\n            r * Math.cos(b) * Math.cos(l),\n            r * Math.cos(b) * (Math.cos(eps)*Math.sin(l) - Math.sin(eps)*Math.tan(b)),\n            r * Math.cos(b) * (Math.sin(eps)*Math.sin(l) + Math.cos(eps)*Math.tan(b))\n        )\n    }\n\n    /**\n     * Converts ecliptic (cartesian) coordinates to the equatorial (cartesian) ones.\n     * @param {Number} tdb - MJD date in TDB scale.\n     * @param {Number} x - x-coordinate on the tdb moment\n     * @param {Number} y - y-coordinate on the tdb moment\n     * @param {Number} z - z-coordinate on the tdb moment\n     * @returns {THREE.Vector3} Equatorial cartesian coordinates\n     */\n    function eclipticToEquatorial(tdb, x, y, z) {\n        var eps = getEpsMean(tdb);\n\n        return new THREE.Vector3(\n            x,\n            y*Math.cos(eps) - z*Math.sin(eps),\n            y*Math.sin(eps) + z*Math.cos(eps)\n        );\n    }\n\n    /**\n     * Return obliquity of the ecliptic in radians.\n     * @param {Number} tdb - MJD date in TDB scale.\n     * @returns {Number} Obliquity of the ecliptic in radians.\n     */\n    function getEpsMean(tdb) {\n        var ts = (tdb - Const.MJD2000) / Const.JULIAN_C,\n            ts2 = ts*ts,\n            ts3 = ts*ts2;\n\n        return Const.SEC_IN_RAD * (84381.448 - 46.8150*ts - 0.00059*ts2 + 0.001813*ts3);\n    }\n\n    /**\n     * Returns greenwich mean sidereal time (GMST) in radians.\n     * @param {Date} date - Civil UTC date.\n     * @returns {Number} GMST in radians.\n     */\n    function getGMST(date) {\n        return satellite.gstimeFromDate(\n            date.getUTCFullYear(),\n            date.getUTCMonth() + 1, // Note, this function requires months in range 1-12.\n            date.getUTCDate(),\n            date.getUTCHours(),\n            date.getUTCMinutes(),\n            date.getUTCSeconds()\n        );\n    }\n\n    /**\n     * Coverts spherical coordinates to the cartesian.\n     * @param {Number} l - Longitude in radians.\n     * @param {Number} b - Latitude in radians.\n     * @param {Number} r - Range in km.\n     * @returns {THREE.Vector3} Cartesian coordinates.\n     */\n    function sphericalToCartesian(l, b, r) {\n        return new THREE.Vector3(\n            r * Math.cos(b) * Math.cos(l),  // x\n            r * Math.cos(b) * Math.sin(l),  // y\n            r * Math.sin(b)                 // z\n        );\n    }\n\n})();\n","/**\n * @file Coverts date between different formats\n * @author Aleksey Maslakov\n */\n\nTRACKER.namespace('utils.DateConverter');\n\n/** @namespace utils/utils.date-converter.js */\nTRACKER.utils.DateConverter = (function() {\n    'use strict';\n    var Const = TRACKER.utils.Constants;\n\n    return {\n        /** Returns ΔT (difference between UT and TT) */\n        getDeltaT: getDeltaT,\n\n        /** Converts civil UTC date to the modified julian days (MJD) */\n        utcToMjd: utcToMjd,\n\n        /** Converts civil UTC date to the barycentric dynamic time (TDB) */\n        utcToTdb: utcToTdb,\n\n        /** Converts civil UTC date to the terrestrial time (TT) */\n        utcToTT: utcToTT,\n    }\n\n    /**\n     * Converts civil UTC date to the modified julian days (MJD)\n     * @param {Date object} date - Date to be converted.\n     * @return {number} Date in modified julian days in UTC scale.\n     */\n    function utcToMjd(date) {\n        var nyear = date.getUTCFullYear(),\n            nmonth = date.getUTCMonth() + 1,\n            nday = date.getUTCDate(),\n            nhours = date.getUTCHours(),\n            nminutes = date.getUTCMinutes(),\n            nseconds = date.getUTCSeconds();\n\n        var a = parseInt((14 - nmonth) / 12);\n        var y = nyear + 4800 - a;\n        var m = nmonth + 12*a - 3;\n\n        var jdn = nday + parseInt((153*m + 2)/5) + 365*y + parseInt(y/4) - parseInt(y/100) + parseInt(y/400) - 32045;\n\n        var jd = (jdn) + ((nhours-12.0)/24.0) + (nminutes/1440.0) + (nseconds/86400.0);\n\n        return jd - Const.DIFF_EPOCH;\n    }\n\n    /**\n     * Converts civil UTC date to the barycentric dynamic time (TDB)\n     * @param {Date object} date - Date to be converted.\n     * @return {number} Date in modified julian days in TDB scale.\n     */\n    function utcToTdb(date) {\n        var tt = utcToTT(date),\n            d = (tt - Const.MJD2000) / Const.JULIAN_C,\n            g = (Const.GRAD_IN_RAD) * (357.258 * 35999.05 * d);\n\n        return tt + (0.001658 * Math.sin(g + 0.0167*Math.sin(g))) / Const.SEC_IN_DAY;\n    }\n\n    /**\n     * Converts civil UTC date to the terrestrial time (TT)\n     * @param {Date object} date - Date to be converted.\n     * @return {number} Date in modified julian days in TT scale.\n     */\n    function utcToTT(date) {\n        var mjd = utcToMjd(date),\n            deltaT = getDeltaT(date.getUTCFullYear(), date.getUTCMonth() + 1);\n\n        return mjd + (deltaT / Const.SEC_IN_DAY);\n    }\n\n    /** Returns ΔT (Correction (TT-UTC) in second)\n     * @param {number} nyear - Full utc year\n     * @param {number} nmonth - Month (1 - 12)\n     * @return {number} Correction (TT-UTC) in second\n     */\n    function getDeltaT(nyear, nmonth) {\n        var leap_second = 0;\n\n        switch (nyear)\n        {\n            case 1972:\n                leap_second = (0 < nmonth && nmonth < 7) ? 10 : 11;\n                break;\n            case 1973:\n                leap_second = 12;\n                break;\n            case 1974:\n                leap_second = 13;\n                break;\n            case 1975:\n                leap_second = 14;\n                break;\n            case 1976:\n                leap_second = 15;\n                break;\n            case 1977:\n                leap_second = 16;\n                break;\n            case 1978:\n                leap_second = 17;\n                break;\n            case 1979:\n                leap_second = 18;\n                break;\n            case 1980:\n                leap_second = 19;\n                break;\n            case 1981:\n                leap_second = (0 < nmonth && nmonth < 7) ? 19 : 20;\n                break;\n            case 1982:\n                leap_second = (0 < nmonth && nmonth < 7) ? 20 : 21;\n                break;\n            case 1983:\n                leap_second = (0 < nmonth && nmonth < 7) ? 21 : 22;\n                break;\n            case 1984:\n                leap_second = 22;\n                break;\n            case 1985:\n                leap_second = (0 < nmonth && nmonth < 7) ? 22 : 23;\n                break;\n            case 1986:\n            case 1987:\n                leap_second = 23;\n                break;\n            case 1988:\n            case 1989:\n                leap_second = 24;\n                break;\n            case 1990:\n                leap_second = 25;\n                break;\n            case 1991:\n                leap_second = 26;\n                break;\n            case 1992:\n                leap_second = (0 < nmonth && nmonth < 7) ? 26 : 27;\n                break;\n            case 1993:\n                leap_second = (0 < nmonth && nmonth < 7) ? 27 : 28;\n                break;\n            case 1994:\n                leap_second = (0 < nmonth && nmonth < 7) ? 28 : 29;\n                break;\n            case 1995:\n                leap_second = 29;\n                break;\n            case 1996:\n                leap_second = 30;\n                break;\n            case 1997:\n                leap_second = (0 < nmonth && nmonth < 7) ? 30 : 31;\n                break;\n            case 1998:\n                leap_second = 31;\n                break;\n            case 1999:\n            case 2000:\n            case 2001:\n            case 2002:\n            case 2003:\n            case 2004:\n            case 2005:\n                leap_second = 32;\n                break;\n            case 2006:\n            case 2007:\n            case 2008:\n                leap_second = 33;\n                break;\n            case 2009:\n            case 2010:\n            case 2011:\n                leap_second = 34;\n                break;\n            case 2012:\n                leap_second = (0 < nmonth && nmonth < 7) ? 34 : 35;\n                break;\n            case 2013:\n            case 2014:\n                leap_second = 35;\n                break;\n            case 2015:\n                leap_second = (0 < nmonth && nmonth < 7) ? 35 : 36;\n                break;\n            default:\n                leap_second = (nyear > 1972) ? 36 : 10;\n        }\n\n        return leap_second + Const.TT_TAI_DIFF;\n    }\n\n})();\n","TRACKER.namespace('utils.Loaders');\n\nTRACKER.utils.Loaders = (function() {\n    'use strict';\n\n    return {\n        defferedOBJLoader: defferedOBJLoader,\n        defferedOBJMTLLoader: defferedOBJMTLLoader,\n        defferedTextureLoader: defferedTextureLoader\n    }\n\n\n    function defferedOBJLoader(obj, name, url) {\n        var defer = $.Deferred();\n        var loader = new THREE.OBJLoader();\n        loader.load(url, function ( event ) {\n            obj[name] = event;\n            defer.resolve();\n        });\n\n        return defer;\n    }\n\n\n    function defferedMTLLoader(obj, name, url) {\n        var defer = $.Deferred();\n        var loader = new THREE.OBJLoader();\n        loader.load(url, function ( event ) {\n            obj[name] = event;\n            defer.resolve();\n        });\n\n        return defer;\n    }\n\n    function defferedOBJMTLLoader(obj, name, objUrl, mtlUrl) {\n        var defer = $.Deferred();\n        var mtlLoader = new THREE.MTLLoader();\n        mtlLoader.load(mtlUrl, function ( event ) {\n            event.preload();\n\n            var objLoader = new THREE.OBJLoader();\n            objLoader.setMaterials(event);\n            objLoader.load(objUrl, function ( object ) {\n                obj[name] = object;\n                defer.resolve();\n            })\n        });\n\n        return defer.promise();\n    }\n\n\n    function defferedTextureLoader(obj, name, url)\n    {\n        var defer = $.Deferred();\n        var loader = new THREE.TextureLoader();\n        loader.load(url, function ( event ) {\n            obj[name] = event;\n            defer.resolve();\n        });\n\n        return defer;\n    }\n\n})();\n","/**\n * @file Celestial Object constructor\n * @author Aleksey Maslakov\n */\n\n\nTRACKER.namespace('CelestialObject');\n\nTRACKER.CelestialObject = (function() {\n    'use strict';\n\n    /**\n     * Creates a new Celestial Object - basically it's two spheres (ground and atmosphere).\n     * @constructor\n     * @param {Object} userConf - user options.\n     * @param {THREE.Texture} [userConf.diffuse] - Texture to show on the bright side of the sphere.\n     * @param {THREE.Texture} [userConf.diffuseNight] - Texture to show on the dark side of the sphere.\n     * @param {THREE.Texture} [userConf.diffuseSpecular] - Specular texture.\n     * @param {Object} [userConf.atmosphere] - Object with parameters of the atmospheres.\n     * @param {Number} [userConf.atmosphere.Kr=0.0025]\n     * @param {Number} [userConf.atmosphere.Km=0.0010]\n     * @param {Number} [userConf.atmosphere.ESun=20.0]\n     * @param {Number} [userConf.atmosphere.g=-0.950]\n     * @param {Number} [userConf.atmosphere.innerRadius=100.0] - Radius of the object.\n     * @param {Number} [userConf.atmosphere.outerRadius=101.5] - Radius of the object's atmopshere.\n     * @param {Number} [userConf.atmosphere.outerRadius=101.5] - Radius of the object's atmopshere.\n     * @param {number[]} [userConf.atmosphere.wavelength=[0.55, 0.5, 0.475]] - RGB Color of the atmosphere.\n     * @param {number} [userConf.atmosphere.scaleDepth=0.25] - RGB Color of the atmosphere.\n     */\n    function CelestialObject(userConf) {\n        var diffuse,\n            diffuseNight,\n            diffuseSpecular,\n            uniforms;\n\n        /**\n         * Ground\n         * @type THREE.Mesh\n         */\n        this.atmosphere = {\n            Kr: 0.0025,\n            Km: 0.0010,\n            ESun: 20.0,\n            g: -0.950,\n            innerRadius: 100.0,\n            innerSegments: 50,\n            outerRadius: 101.5,\n            outerSegments: 128,\n            wavelength: [0.550, 0.50, 0.475],\n            scaleDepth: 0.25,\n        };\n        if (userConf) {\n            if (userConf.atmosphere) {\n                $.extend(this.atmosphere, userConf.atmosphere);\n            }\n            diffuse = userConf.diffuse;\n            diffuseNight = userConf.diffuseNight;\n            diffuseSpecular = userConf.diffuseSpecular;\n        }\n\n        uniforms = CelestialObject.uniforms.configureUniforms(diffuse, diffuseNight, diffuseSpecular, this.atmosphere);\n\n        this.ground = new THREE.Mesh(\n            new THREE.SphereGeometry(this.atmosphere.innerRadius,\n                                     this.atmosphere.innerSegments,\n                                     this.atmosphere.innerSegments),\n            new THREE.ShaderMaterial({\n                uniforms: uniforms,\n                vertexShader: $(\"#vertexGround\").text(),\n                fragmentShader: $(\"#fragmentGround\").text()\n            })\n        );\n\n        /**\n         * Atmosphere\n         * @type THREE.Mesh\n         */\n        this.sky = new THREE.Mesh(\n            new THREE.SphereGeometry(this.atmosphere.outerRadius,\n                                     this.atmosphere.outerSegments,\n                                     this.atmosphere.outerSegments),\n            new THREE.ShaderMaterial({\n                uniforms: uniforms,\n                vertexShader: $(\"#vertexSky\").text(),\n                fragmentShader: $(\"#fragmentSky\").text(),\n                side: THREE.BackSide,\n                transparent: true\n            })\n        );\n    };\n\n    /**\n     * Gets or sets the ESun param of the atmosphere\n     * @param {number} [val] - Value to be set\n     * @returns {number} If `val` is not specified return current ESun value.\n     *                  If `val` is specified sets the new value and return `this`.\n     */\n    CelestialObject.prototype.ESun = function(val) {\n        if (!arguments.length) return this.atmosphere.ESun;\n\n        var fKrESun = CelestialObject.uniforms.calcfKrESun(this.atmosphere.Kr, val),\n            fKmESun = CelestialObject.uniforms.calcfKmESun(this.atmosphere.Km, val);\n\n        this.atmosphere.ESun = val;\n        this.ground.material.uniforms.fKrESun.value = fKrESun;\n        this.ground.material.uniforms.fKmESun.value = fKmESun;\n        this.sky.material.uniforms.fKmESun.value = fKmESun;\n        this.sky.material.uniforms.fKrESun.value = fKrESun;\n\n        return this;\n    }\n\n    /**\n     * Gets or sets the `g` param of the atmosphere\n     * @param {number} [val] - Value to be set\n     * @returns {number} If `val` is not specified return current g value.\n     *                   If `val` is specified sets the new value and return `this`.\n     */\n    CelestialObject.prototype.g = function(val) {\n        if (!arguments.length) return this.atmosphere.g;\n\n        var val2 = val * val\n        this.atmosphere.g = val;\n        this.sky.material.uniforms.g.value = val;\n        this.sky.material.uniforms.g2.value = val2;\n        this.ground.material.uniforms.g.value = val;\n        this.ground.material.uniforms.g2.value = val2;\n\n        return this;\n    }\n\n    /**\n     * Gets or sets the `Km` param of the atmosphere\n     * @param {number} [val] - Value to be set\n     * @returns {number} If `val` is not specified return current Km value.\n     *                   If `val` is specified sets the new value and return `this`.\n     */\n    CelestialObject.prototype.Km = function(val) {\n        if (!arguments.length) return this.atmosphere.Km;\n\n        var fKmESun = CelestialObject.uniforms.calcfKmESun(val, this.atmosphere.ESun),\n            fKm4PI = CelestialObject.uniforms.calcfKm4PI(val);\n\n        this.atmosphere.Km = val;\n        this.ground.material.uniforms.fKmESun.value = fKmESun;\n        this.ground.material.uniforms.fKm4PI.value = fKm4PI;\n        this.sky.material.uniforms.fKm4PI.value = fKm4PI;\n        this.sky.material.uniforms.fKmESun.value = fKmESun;\n\n        return this;\n    }\n\n    /**\n     * Gets or sets the `Kr` param of the atmosphere\n     * @param {number} [val] - Value to be set\n     * @returns {number} If `val` is not specified return current Kr value.\n     *                   If `val` is specified sets the new value and return `this`.\n     */\n    CelestialObject.prototype.Kr = function(val) {\n        if (!arguments.length) return this.atmosphere.Kr;\n\n        var fKrESun = CelestialObject.uniforms.calcfKrESun(val, this.atmosphere.ESun),\n            fKr4PI = CelestialObject.uniforms.calcfKr4PI(val);\n\n        this.atmosphere.Kr = val;\n        this.ground.material.uniforms.fKrESun.value = fKrESun;\n        this.ground.material.uniforms.fKr4PI.value = fKr4PI;\n        this.sky.material.uniforms.fKr4PI.value = fKr4PI;\n        this.sky.material.uniforms.fKrESun.value = fKrESun;\n\n        return this;\n    }\n\n    /**\n     * Gets or sets the position of the light\n     * @param {THREE.Vector3} [position] - position to be set\n     * @returns {number} If `position` is not specified return current light position value.\n     *                   If `position` is specified sets the new value and return `this`.\n     */\n    CelestialObject.prototype.lightPosition = function(position) {\n        if (!arguments.length) return this.ground.material.uniforms.v3LightPosition.value;\n\n        this.ground.material.uniforms.v3LightPosition.value.copy(position).normalize();\n        this.sky.material.uniforms.v3LightPosition.value.copy(position).normalize();\n\n        return this;\n    };\n\n    /**\n     * Gets or sets the position of the object\n     * @param {THREE.Vector3} [position] - positions to be set\n     * @returns {number} If `position` is not specified return current light position value.\n     *                   If `position` is specified sets the new value and return `this`.\n     */\n    CelestialObject.prototype.position = function(position) {\n        if (!arguments.length) return this.ground.position;\n\n        this.ground.position.copy(position);\n        this.sky.position.copy(position);\n\n        return this;\n    };\n\n    /**\n     * Rotate object around Y-axis by the specified angle.\n     * @param {number} angle - Angle in radians\n     @ @returns `this`\n     */\n    CelestialObject.prototype.rotateY = function(angle) {\n        var cosA = Math.cos(angle),\n            sinA = Math.sin(angle);\n\n        this.ground.rotation.y = angle;\n        this.ground.material.uniforms.m3RotY.value.set(cosA, 0, -sinA,\n                                                       0,    1, 0,\n                                                       sinA, 0, cosA);\n        this.sky.rotation.y = angle;\n        this.sky.material.uniforms.m3RotY.value.set(cosA, 0, -sinA,\n                                                    0,    1, 0,\n                                                    sinA, 0, cosA);\n\n        return this;\n    };\n\n    /**\n     * Sets new object's textures.\n     * @param {Object} textures - Angle in radians\n     * @param {THREE.Texture} [textures.diffuse] - Texture to show on the bright side of the sphere.\n     * @param {THREE.Texture} [textures.diffuseNight] - Texture to show on the dark side of the sphere.\n     * @param {THREE.Texture} [textures.diffuseSpecular] - Specular texture.\n     @ @returns `this`\n     */\n    CelestialObject.prototype.setTextures = function(textures) {\n        if (textures.diffuse) {\n            this.ground.material.uniforms.tDiffuse.value = textures.diffuse;\n        }\n        if (textures.diffuseNight) {\n            this.ground.material.uniforms.tDiffuseNight.value = textures.diffuseNight;\n        }\n        if (textures.diffuseSpecular) {\n            this.ground.material.uniforms.tDiffuseSpecular.value = textures.diffuseSpecular;\n        }\n\n        return this;\n    };\n\n    /**\n     * Gets or sets the `scaleDepth` param of the atmosphere\n     * @param {number} [val] - Value to be set\n     * @returns {number} If `val` is not specified return current scaleDepth value.\n     *                   If `val` is specified sets the new value and return `this`.\n     */\n    CelestialObject.prototype.scaleDepth = function(val) {\n        if (!arguments.length) return this.atmosphere.scaleDepth;\n\n        var overScale = CelestialObject.uniforms.calcfScaleOverScaleDepth(this.atmosphere.innerRadius,\n                                                                          this.atmosphere.outerRadius,\n                                                                          this.atmosphere.scaleDepth);\n        this.atmosphere.scaleDepth = val;\n        this.ground.material.uniforms.fScaleDepth.value = val;\n        this.ground.material.uniforms.fScaleDepth.value = val;\n        this.sky.material.uniforms.fScaleOverScaleDepth.value = overScale;\n        this.sky.material.uniforms.fScaleOverScaleDepth.value = overScale;\n\n        return this;\n    }\n\n    /**\n     * Gets or sets the blue color of the atmosphere's color.\n     * @param {number} [val] - Value to be set\n     * @returns {number} If `val` is not specified return current value value of the blue color.\n     *                   If `val` is specified sets the new value and return `this`.\n     */\n    CelestialObject.prototype.waveBlue = function(val) {\n        if (!arguments.length) return this.atmosphere.wavelength[2];\n\n        var blue = CelestialObject.uniforms.calcvWaveChannel(val);\n        this.atmosphere.wavelength[2] = val;\n        this.ground.material.uniforms.v3InvWavelength.value.setZ(blue);\n        this.sky.material.uniforms.v3InvWavelength.value.setZ(blue);\n\n        return this;\n    }\n\n    /**\n     * Gets or sets the green color of the atmosphere's color.\n     * @param {number} [val] - Value to be set\n     * @returns {number} If `val` is not specified return current value value of the green color.\n     *                   If `val` is specified sets the new value and return `this`.\n     */\n    CelestialObject.prototype.waveGreen = function(val) {\n        if (!arguments.length) return this.atmosphere.wavelength[1];\n\n        var green = CelestialObject.uniforms.calcvWaveChannel(val);\n        this.atmosphere.wavelength[1] = val;\n        this.ground.material.uniforms.v3InvWavelength.value.setY(green);\n        this.sky.material.uniforms.v3InvWavelength.value.setY(green);\n\n        return this;\n    }\n\n    /**\n     * Gets or sets the red color of the atmosphere's color.\n     * @param {number} [val] - Value to be set\n     * @returns {number} If `val` is not specified return current value value of the red color.\n     *                   If `val` is specified sets the new value and return `this`.\n     */\n    CelestialObject.prototype.waveRed = function(val) {\n        if (!arguments.length) return this.atmosphere.wavelength[0];\n\n        var red = CelestialObject.uniforms.calcvWaveChannel(val);\n        this.atmosphere.wavelength[0] = val;\n        this.ground.material.uniforms.v3InvWavelength.value.setX(red);\n        this.sky.material.uniforms.v3InvWavelength.value.setX(red);\n\n        return this;\n    }\n\n    return CelestialObject;\n\n})();\n","/**\n * @file Celestial Object uniforms\n * @author Aleksey Maslakov\n */\n\nTRACKER.namespace('CelestialObject.uniforms');\n\nTRACKER.CelestialObject.uniforms = (function() {\n    'use strict';\n\n    return {\n        calcfKrESun: calcfKrESun,\n        calcfKmESun: calcfKmESun,\n        calcfKr4PI: calcfKr4PI,\n        calcfKm4PI: calcfKm4PI,\n        calcfScaleOverScaleDepth: calcfScaleOverScaleDepth,\n        calcvWaveChannel: calcvWaveChannel,\n        configureUniforms: configureUniforms\n    }\n\n    function calcfKrESun(Kr, ESun) {\n        return Kr * ESun\n    }\n\n    function calcfKmESun(Km, ESun) {\n        return Km * ESun\n    }\n\n    function calcfKr4PI(Kr) {\n        return Kr * 4 * Math.PI\n    }\n\n    function calcfKm4PI(Km) {\n        return Km * 4 * Math.PI\n    }\n\n    function calcfScaleOverScaleDepth(innerRadius, outerRadius, scaleDepth) {\n        return 1 / (outerRadius - innerRadius) / scaleDepth\n    }\n\n    function calcvWaveChannel(val) {\n        return 1 / Math.pow(val, 4)\n    }\n\n    function configureUniforms(diffuse, diffuseNight, diffuseSpecular, atmosphere) {\n        return {\n            m3RotY: {\n                type: \"m3\",\n                value: new THREE.Matrix3()\n            },\n            v3LightPosition: {\n                type: \"v3\",\n                value: new THREE.Vector3(1e8, 0, 1e8).normalize()\n            },\n            v3InvWavelength: {\n                type: \"v3\",\n                value: new THREE.Vector3(calcvWaveChannel(atmosphere.wavelength[0]),\n                                         calcvWaveChannel(atmosphere.wavelength[1]),\n                                         calcvWaveChannel(atmosphere.wavelength[2]))\n            },\n            fCameraHeight: {\n                type: \"f\",\n                value: 0\n            },\n            fCameraHeight2: {\n                type: \"f\",\n                value: 0\n            },\n            fInnerRadius: {\n                type: \"f\",\n                value: atmosphere.innerRadius\n            },\n            fInnerRadius2: {\n                type: \"f\",\n                value: atmosphere.innerRadius * atmosphere.innerRadius\n            },\n            fOuterRadius: {\n                type: \"f\",\n                value: atmosphere.outerRadius\n            },\n            fOuterRadius2: {\n                type: \"f\",\n                value: atmosphere.outerRadius * atmosphere.outerRadius\n            },\n            fKrESun: {\n                type: \"f\",\n                value: calcfKrESun(atmosphere.Kr, atmosphere.ESun)\n            },\n            fKmESun: {\n                type: \"f\",\n                value: calcfKmESun(atmosphere.Km, atmosphere.ESun)\n            },\n            fKr4PI: {\n                type: \"f\",\n                value: calcfKr4PI(atmosphere.Kr)\n            },\n            fKm4PI: {\n                type: \"f\",\n                value: calcfKm4PI(atmosphere.Km)\n            },\n            fScale: {\n                type: \"f\",\n                value: 1 / (atmosphere.outerRadius - atmosphere.innerRadius)\n            },\n            fScaleDepth: {\n                type: \"f\",\n                value: atmosphere.scaleDepth\n            },\n            fScaleOverScaleDepth: {\n                type: \"f\",\n                value: calcfScaleOverScaleDepth(atmosphere.innerRadius, atmosphere.outerRadius, atmosphere.scaleDepth)\n            },\n            g: {\n                type: \"f\",\n                value: atmosphere.g\n            },\n            g2: {\n                type: \"f\",\n                value: atmosphere.g * atmosphere.g\n            },\n            tDiffuse: {\n                type: \"t\",\n                value: diffuse\n            },\n            tDiffuseNight: {\n                type: \"t\",\n                value: diffuseNight\n            },\n            tDiffuseSpecular: {\n                type: \"t\",\n                value: diffuseSpecular\n            },\n            fNightScale: {\n                type: \"f\",\n                value: 1\n            },\n            fSpecularScale: {\n                type: \"f\",\n                value: 1\n            },\n            fSpecularSize: {\n                type: \"f\",\n                value: 25\n            }\n        };\n    }\n})();\n","'use strict';\n\n\nTRACKER.namespace('milkyway');\n\n\nTRACKER.milkyway = (function() {\n    var milkyway = new THREE.Mesh(\n        new THREE.SphereGeometry(1e4, 64, 64),\n        new THREE.MeshBasicMaterial({\n            map: THREE.ImageUtils.loadTexture('/src/images/milkyway/milkyway.jpg'),\n            side: THREE.BackSide,\n            opacity: 0.1\n        })\n    )\n\n    return \t{\n        milkyway: milkyway\n    }\n})();\n","/**\n * @file Calculates moon position in different coordinate systems\n * @author Aleksey Maslakov\n */\n\nTRACKER.namespace(\"MoonPosition\");\n\n/**\n * Methods to calculate Moon position\n * @namespace MoonPosition\n */\nTRACKER.MoonPosition = (function() {\n    'use strict';\n\n    var Const = TRACKER.utils.Constants,\n        CoordConverter = TRACKER.utils.CoordinateConverter,\n        DateConverter = TRACKER.utils.DateConverter;\n\n    function frac(f) {\n        return f % 1;\n    }\n\n    return {\n        /**\n         * Returns Moon's ecliptic position in spherical coordinates\n         * @param {Date} date - Civil Date in UTC scale to calculate to\n         * @returns {THREE.Vector3} longitude (rad), latitude (rad) and distance (km) respectively\n         */\n        getEclipticPosition: function(date) {\n            var dt = (DateConverter.utcToMjd(date) - Const.MJD2000) / Const.JULIAN_C;\n            // mean elements of lunar orbit\n            var fam = frac(0.606433 + 1336.855225*dt);       // { mean longitude [rev] }\n            var fal = Const.PI2 * frac(0.374897 + 1325.552410*dt);  // { Moon's mean anomaly radian }\n            var fap = Const.PI2 * frac(0.993133 + 99.997361*dt);  // { Sun's mean anomaly  radian }\n            var fad = Const.PI2 * frac(0.827361 + 1236.853086*dt);  // { Diff. long. Moon-Sun }\n            var faf = Const.PI2 * frac(0.259086+1342.227825*dt);  // { Dist. from ascending node }\n            // { perturbations in longitude and latitude }\n            var dl = +22640*Math.sin(fal) - 4586*Math.sin(fal-2*fad)\n                     +2370*Math.sin(2*fad) + 769*Math.sin(2*fal)\n                     -668*Math.sin(fap) - 412*Math.sin(2*faf)\n                     -212*Math.sin(2*fal-2*fad) - 206*Math.sin(fal+fap-2*fad)\n                     +192*Math.sin(fal+2*fad) - 165*Math.sin(fap-2*fap)\n                     -125*Math.sin(fad) - 110*Math.sin(fal+fap)\n                     +148*Math.sin(fal-fap) - 55*Math.sin(2*faf-2*fad);\n            var ds = faf + Const.SEC_IN_RAD * (dl + 412*Math.sin(2*faf) + 541*Math.sin(fap));\n            var dh = faf - 2*fad;\n            var dn = -526*Math.sin(dh) + 44*Math.sin(fal+dh) - 31*Math.sin(-fal+dh) - 23*Math.sin(fap+dh) +\n                      11*Math.sin(-fap+dh) - 25*Math.sin(-2*fal+faf) + 21*Math.sin(-fal+faf);\n            // { ecliptic longitude and latitude }\n            var v = Const.PI2 * frac(fam+dl/1296.0e3);  // { longitude [rad] }\n            var b = Const.SEC_IN_RAD*(18520.0*Math.sin(ds)+dn); // { latitude  [rad] }\n            // { range with correction for range in arcsec }\n            var dr = +3422.70\n                  +28.233869*Math.cos(2*fad)\n                    +3.08589*Math.cos(fal+2*fad)\n                 +186.539296*Math.cos(fal)\n                  +34.311569*Math.cos(fal-2*fad)\n                   +1.916735*Math.cos(fap-2*fad)\n                   -0.977818*Math.cos(fad)\n                  +10.165933*Math.cos(2*fal)\n                   -0.949147*Math.cos(fal+fap)\n                   +1.443617*Math.cos(fal+fap-2*fad);\n            var r = Const.R0 / (0.999953253 * Const.SEC_IN_RAD*dr);  // { range in km }\n\n            return new THREE.Vector3(v, b, r);\n        },\n\n        /**\n         * Returns Moon's Equatorial position\n         * @param {Date} date - Civil Date in UTC scale to calculate to\n         * @returns {THREE.Vector3} - Moon's equatorial position in the cartesian system.\n         */\n        getEquatorialPosition: function(date) {\n            var tdb = DateConverter.utcToTdb(date),\n                eclPos = this.getEclipticPosition(date),\n                equPos = CoordConverter.eclipSpherToEquCart(tdb, eclPos.x, eclPos.y, eclPos.z);\n\n            return new THREE.Vector3(equPos.x, equPos.z, -equPos.y);\n        }\n    }\n})();\n","TRACKER.namespace('Player');\n\nTRACKER.Player = (function() {\n    'use strict';\n\n    var player = {};\n\n    player.onDateChangeCallback = null;\n    player.changeCameraViewCallback = null;\n    player.clicked = false;\n    player.coordinateSystem = 'geocentric';\n    player.date = null;\n    player.play = true;\n    player.speed = 1000;\n    player.toggleCoordinatesCallback = null;\n    player.width = null;\n\n    player.init = init;\n    player.dateClicked = dateClicked;\n    player.forward = forward;\n    player.hideCameraViewPopup = hideCameraViewPopup;\n    player.hidePrehover = hidePrehover;\n    player.onDateChange = onDateChange;\n    player.onDateClicked = onDateClicked;\n    player.onDateClickedAndMove = onDateClickedAndMove;\n    player.rewind = rewind;\n    player.showCameraViewPopup = showCameraViewPopup;\n    player.showPrehover = showPrehover;\n    player.toggleCoordinates = toggleCoordinates;\n    player.togglePlay = togglePlay;\n    player.toggleSpeed = toggleSpeed;\n    player.toNow = toNow;\n    player.updateDateRange = updateDateRange;\n    player.updateHover = updateHover;\n    player.updateScale = updateScale;\n\n\n    function init(conf) {\n        var config = conf || {};\n\n        player.date = config.date || new Date();\n        player.width = $(document).width();\n        player.onDateChangeCallback = config.onDateChangeCallback || null;\n        player.toggleCoordinatesCallback = config.toggleCoordinatesCallback || null;\n        player.changeCameraViewCallback = config.changeCameraViewCallback || null;\n\n        player.updateScale(player.range, player.width);\n        player.updateDateRange(player.date);\n        player.updateHover();\n\n        $('#play').click(player.togglePlay);\n        $('#rewind').click(player.rewind);\n        $('#forward').click(player.forward);\n        $('#now').click(player.toNow);\n        $('#speed').click(player.toggleSpeed);\n        $('#coordinate_system').click(player.toggleCoordinates);\n        $('#camera_view').click(player.showCameraViewPopup);\n        $('#camera_view_popup .st-popup-item').click(player.changeCameraViewCallback);\n\n        $('.st-progress-bar').mousedown(player.onDateClicked)\n            .mousemove(player.onDateChange)\n            .mouseenter(player.showPrehover)\n            .mouseleave(player.hidePrehover);\n\n        $(document).mousemove(player.onDateClickedAndMove)\n            .mouseup(player.dateClicked)\n            .mouseup(player.hideCameraViewPopup);\n\n        return player;\n    }\n\n    function dateClicked(e) {\n        player.clicked = false;\n    }\n\n    function forward() {\n\t\tplayer.date.setUTCMonth(player.date.getUTCMonth() + 1);\n\t\tplayer.updateDateRange(player.date);\n        if (!player.play && typeof player.onDateChangeCallback === 'function') {\n\t\t\tplayer.onDateChangeCallback();\n\t\t}\n    }\n\n    function hideCameraViewPopup(e) {\n        var container = $(\"#camera_view_popup\");\n\n        if (!container.is(e.target) && container.has(e.target).length === 0) {\n            container.hide();\n        }\n    }\n\n    function hidePrehover() {\n        if (player.clicked) return;\n        $('.st-hover-progress').hide(100);\n        $('.st-selected-date').hide(100);\n    }\n\n    function onDateChange(e) {\n\t\tvar date = new Date(player.startDate + player.scale * e.pageX);\n\t\t$('.st-selected-date').css({\n\t\t\t'left': (player.width/2 >= e.pageX) ? e.pageX : 'auto',\n\t\t\t'right': (player.width/2 < e.pageX) ? player.width - e.pageX : 'auto'\n\t\t}).text(date);\n\n\t\t$('.st-hover-progress').css({\n\t\t\twidth: e.pageX\n\t\t});\n\n\t\tif (!player.clicked) return;\n\n\t\t$('.st-play-progress').css({\n\t\t\twidth: e.pageX\n\t\t});\n\t\tplayer.date = date;\n\t\tif (!player.play && typeof player.onDateChangeCallback === 'function') {\n\t\t\tplayer.onDateChangeCallback();\n\t\t}\n\t}\n\n    function onDateClicked(e) {\n        player.clicked = true;\n        player.onDateChange(e);\n    }\n\n    function onDateClickedAndMove(e) {\n        if (!player.clicked) return;\n        player.onDateChange(e);\n    }\n\n    function rewind() {\n\t\tplayer.date.setUTCMonth(player.date.getUTCMonth() - 1);\n\t\tplayer.updateDateRange(player.date);\n        if (!player.play && typeof player.onDateChangeCallback === 'function') {\n\t\t\tplayer.onDateChangeCallback();\n\t\t}\n\t}\n\n    function showCameraViewPopup() {\n\t\tvar popup = $('#camera_view_popup'),\n\t\t\tcameraView = $('#camera_view'),\n\t\t\tpopupHalfWidth = popup.width() / 2;\n\n\t\t$('.st-popup-arrow').css({\n\t\t\t'left': $(document).width() - cameraView.offset().left + cameraView.outerWidth() / 2 - 5\n\t\t});\n\t\tpopup.toggle(100);\n\t};\n\n    function showPrehover() {\n        $('.st-hover-progress').show(100);\n        $('.st-selected-date').show(100);\n    }\n\n    function togglePlay() {\n        player.play = !player.play;\n        $('#pause_button').toggleClass('hide');\n        $('#play_button').toggleClass('hide');\n    }\n\n    function toggleCoordinates() {\n        $(this).toggleClass('warning');\n        player.coordinateSystem = (player.coordinateSystem === 'heliocentric') ? 'geocentric' : 'heliocentric';\n        if (typeof player.toggleCoordinatesCallback === 'function') {\n            player.toggleCoordinatesCallback();\n        }\n    }\n\n    function toggleSpeed() {\n        $(this).toggleClass('red');\n        player.speed = (player.speed === 1000) ? 3000 : 1000;\n    }\n\n    function toNow() {\n        player.date = new Date();\n        player.updateHover();\n    }\n\n\tfunction updateDateRange(date) {\n\t\tplayer.startDate = new Date(date.getFullYear(), date.getMonth(), 1).getTime();\n\t\tplayer.endDate = new Date(date.getFullYear(), date.getMonth() + 1, 0).getTime();\n\t\tplayer.range = player.endDate - player.startDate;\n\t\tplayer.updateScale(player.range, player.width);\n\n\t\treturn player;\n\t}\n\n\tfunction updateHover() {\n\t\t$('.st-play-progress').css({\n\t\t\twidth: (player.date.getTime() - player.startDate) / player.scale\n\t\t});\n\t}\n\n    function updateScale(range, width) {\n        player.scale = player.range / player.width;\n    }\n\n    return player;\n\n})();\n","TRACKER.namespace('Satellite');\n\nTRACKER.Satellite = (function() {\n    'use strict';\n\n    var Const = TRACKER.utils.Constants,\n        CoordConverter = TRACKER.utils.CoordinateConverter,\n        Satellite;\n\n    Satellite = function(tle, scale, object3d) {\n        this.object3d = object3d;\n        this.satrec = satellite.twoline2satrec(tle.line1, tle.line2);\n        this.scale = scale;\n    };\n\n    Satellite.prototype.setObj = function(obj) {\n        this.object3d = obj;\n    };\n\n    Satellite.prototype.position = function(date, gmst) {\n        var p = satellite.propagate(\n    \t\tthis.satrec,\n    \t\tdate.getUTCFullYear(),\n    \t\tdate.getUTCMonth() + 1, // Note, this function requires months in range 1-12.\n    \t\tdate.getUTCDate(),\n    \t\tdate.getUTCHours(),\n    \t\tdate.getUTCMinutes(),\n    \t\tdate.getUTCSeconds()\n    \t).position;\n\n        return new THREE.Vector3(p.x, p.z, -p.y).divideScalar(this.scale);\n    };\n\n    Satellite.prototype.propagate = function(date, gmst) {\n        var position = this.position(date, gmst);\n        this.object3d.position.copy(position);\n\n        return position;\n    }\n\n    Satellite.prototype.rotateY = function(angle) {\n        var axis = new THREE.Vector3(0, 1, 0);\n\n        this.object3d.position.applyAxisAngle(axis, angle);\n    }\n\n    return Satellite;\n\n})();\n","TRACKER.namespace('Sun');\n\nTRACKER.Sun = (function() {\n    'use strict';\n\n    var Const = TRACKER.utils.Constants,\n        CoordConverter = TRACKER.utils.CoordinateConverter,\n        DateConverter = TRACKER.utils.DateConverter;\n\n    function frac(f) {\n        return f % 1;\n    }\n\n    var Sun = function(textures, color, scale) {\n        var flareColor = new THREE.Color( 0xffffff );\n\n        if (color) {\n            flareColor.setHSL( color.h, color.s, color.l + 0.5 );\n        }\n        else {\n            flareColor.setHSL( 0.55, 0.9, 0.5 + 0.5 );\n        }\n\n        this.light = new THREE.DirectionalLight( 0xffffff, 1 );\n        this.lensFlare = new THREE.LensFlare( textures[0], 350, 0.0, THREE.AdditiveBlending, flareColor );\n        this.lensFlare.add( textures[1], 512, 0.0, THREE.AdditiveBlending );\n        this.lensFlare.add( textures[2], 60, 0.6, THREE.AdditiveBlending );\n        this.lensFlare.add( textures[2], 70, 0.7, THREE.AdditiveBlending );\n        this.lensFlare.add( textures[2], 120, 0.9, THREE.AdditiveBlending );\n        this.lensFlare.add( textures[2], 70, 1.0, THREE.AdditiveBlending );\n        this.lensFlare.customUpdateCallback = lensFlareUpdateCallback;\n        this.scale = scale || 63.71;\n    };\n\n    function lensFlareUpdateCallback( object ) {\n\t\tvar f, fl = object.lensFlares.length;\n\t\tvar flare;\n\t\tvar vecX = -object.positionScreen.x * 2;\n\t\tvar vecY = -object.positionScreen.y * 2;\n\t\tfor( f = 0; f < fl; f++ ) {\n\t\t\tflare = object.lensFlares[ f ];\n\t\t\tflare.x = object.positionScreen.x + vecX * flare.distance;\n\t\t\tflare.y = object.positionScreen.y + vecY * flare.distance;\n\t\t\tflare.rotation = 0;\n\t\t}\n\t\tobject.lensFlares[ 2 ].y += 0.025;\n\t\tobject.lensFlares[ 3 ].rotation = object.positionScreen.x * 0.5 + THREE.Math.degToRad( 45 );\n\t}\n\n    Sun.prototype.sunEclipticPosition = function(date) {\n        var tdb = DateConverter.utcToTdb(date),\n            ts = (tdb - Const.MJD2000) / Const.JULIAN_C,\n            u3 = Const.PI2 * frac(0.993133 + 99.997361*ts);\n\n        var l = Const.PI2 * frac(0.7859453 + u3/Const.PI2 +\n                        (6893.0*Math.sin(u3) + 72.0*Math.sin(2*u3) + 6191.2 * ts) / 1296.0e3);\n        var b = 0;\n        var r = 1.0001398 + 1.0e-6 *\n                    ((-16707.37 + 42.04*ts) * Math.cos(u3) - 139.57*Math.cos(2*u3) +\n                      30.76*Math.cos(Const.PI2*frac(0.8274+1236.8531*ts)));\n\n        return {\n            lambda: l,\n            betta: b,\n            range: r * Const.AU\n        };\n    }\n\n    Sun.prototype.position = function(date) {\n        var tdb = DateConverter.utcToTdb(date),\n            eclPos = this.sunEclipticPosition(date),\n            equPos = CoordConverter.eclipSpherToEquCart(tdb, eclPos.lambda, eclPos.betta, eclPos.range);\n\n        return new THREE.Vector3(equPos.x, equPos.z, -equPos.y).divideScalar(this.scale);\n    }\n\n    Sun.prototype.propagate = function(date) {\n        var p = this.position(date);\n\n        this.lensFlare.position.copy(p);\n        this.light.position.copy(p);\n\n        return p;\n    }\n\n    Sun.prototype.rotateY = function(angle) {\n        var axis = new THREE.Vector3(0, 1, 0);\n\n        this.lensFlare.position.applyAxisAngle(axis, angle);\n        this.light.position.applyAxisAngle(axis, angle);\n    }\n\n    return Sun;\n\n})();\n"],"sourceRoot":"/source/"}